/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_BRAIN_CONTROLLER_PB_H_INCLUDED
#define PB_BRAIN_CONTROLLER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* This .proto file is intended for use both by the microcontroller and the brain */
typedef enum _currentStatus { 
    currentStatus_OK = 0, 
    currentStatus_ERROR = 1 
} currentStatus;

/* Struct definitions */
typedef struct _getStateSetTargetRequest { 
    float TARGET_X; 
    float TARGET_V; 
    float TARGET_A; 
} getStateSetTargetRequest;

typedef struct _getStateSetTargetResponse { 
    float CURR_CART_X; /* current cart position float */
    float CURR_CART_V; /* current cart velocity float */
    float CURR_CART_A; /* current cart acceleration */
    float CURR_POLE_ANGLE; /* current pole angle */
    float CURR_POLE_V; /* current pole angular velocity */
    float CURR_IMU_A; /* current IMU measured cart acceleration */
    float CURR_MOTOR_X; /* current motor shaft position (radians) */
    float CURR_MOTOR_V; /* motor shaft velocity (rad/sec) */
} getStateSetTargetResponse;

/* Only the brain sends requests */
typedef struct _resetRequest { 
    float MAX_CART_X; 
    float MAX_CART_V; 
    float MATX_CART_A; 
    float HW_MAX_X; 
    float HW_MAX_V; 
    float HW_MAX_A; 
    float MAX_THRESHOLD_X; 
    float MAX_THRESHOLD_V; 
    float MAX_THRESHOLD_A; 
} resetRequest;

typedef struct _resetResponse { 
    float MAX_CART_X; 
    float MAX_CART_V; 
    float MAX_CART_A; 
    float HW_MAX_X; 
    float HW_MAX_V; 
    float HW_MAX_A; 
    float MAX_THRESHOLD_X; 
    float MAX_THRESHOLD_V; 
    float MAX_THRESHOLD_A; /* TODO:debug led? */
} resetResponse;


/* Helper constants for enums */
#define _currentStatus_MIN currentStatus_OK
#define _currentStatus_MAX currentStatus_ERROR
#define _currentStatus_ARRAYSIZE ((currentStatus)(currentStatus_ERROR+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define resetRequest_init_default                {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define getStateSetTargetRequest_init_default    {0, 0, 0}
#define resetResponse_init_default               {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define getStateSetTargetResponse_init_default   {0, 0, 0, 0, 0, 0, 0, 0}
#define resetRequest_init_zero                   {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define getStateSetTargetRequest_init_zero       {0, 0, 0}
#define resetResponse_init_zero                  {0, 0, 0, 0, 0, 0, 0, 0, 0}
#define getStateSetTargetResponse_init_zero      {0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define getStateSetTargetRequest_TARGET_X_tag    1
#define getStateSetTargetRequest_TARGET_V_tag    2
#define getStateSetTargetRequest_TARGET_A_tag    3
#define getStateSetTargetResponse_CURR_CART_X_tag 1
#define getStateSetTargetResponse_CURR_CART_V_tag 2
#define getStateSetTargetResponse_CURR_CART_A_tag 3
#define getStateSetTargetResponse_CURR_POLE_ANGLE_tag 4
#define getStateSetTargetResponse_CURR_POLE_V_tag 5
#define getStateSetTargetResponse_CURR_IMU_A_tag 6
#define getStateSetTargetResponse_CURR_MOTOR_X_tag 7
#define getStateSetTargetResponse_CURR_MOTOR_V_tag 8
#define resetRequest_MAX_CART_X_tag              1
#define resetRequest_MAX_CART_V_tag              2
#define resetRequest_MATX_CART_A_tag             3
#define resetRequest_HW_MAX_X_tag                4
#define resetRequest_HW_MAX_V_tag                5
#define resetRequest_HW_MAX_A_tag                6
#define resetRequest_MAX_THRESHOLD_X_tag         7
#define resetRequest_MAX_THRESHOLD_V_tag         8
#define resetRequest_MAX_THRESHOLD_A_tag         9
#define resetResponse_MAX_CART_X_tag             1
#define resetResponse_MAX_CART_V_tag             2
#define resetResponse_MAX_CART_A_tag             3
#define resetResponse_HW_MAX_X_tag               4
#define resetResponse_HW_MAX_V_tag               5
#define resetResponse_HW_MAX_A_tag               6
#define resetResponse_MAX_THRESHOLD_X_tag        7
#define resetResponse_MAX_THRESHOLD_V_tag        8
#define resetResponse_MAX_THRESHOLD_A_tag        9

/* Struct field encoding specification for nanopb */
#define resetRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_CART_X,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_CART_V,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    MATX_CART_A,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    HW_MAX_X,          4) \
X(a, STATIC,   SINGULAR, FLOAT,    HW_MAX_V,          5) \
X(a, STATIC,   SINGULAR, FLOAT,    HW_MAX_A,          6) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_THRESHOLD_X,   7) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_THRESHOLD_V,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_THRESHOLD_A,   9)
#define resetRequest_CALLBACK NULL
#define resetRequest_DEFAULT NULL

#define getStateSetTargetRequest_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    TARGET_X,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    TARGET_V,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    TARGET_A,          3)
#define getStateSetTargetRequest_CALLBACK NULL
#define getStateSetTargetRequest_DEFAULT NULL

#define resetResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_CART_X,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_CART_V,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_CART_A,        3) \
X(a, STATIC,   SINGULAR, FLOAT,    HW_MAX_X,          4) \
X(a, STATIC,   SINGULAR, FLOAT,    HW_MAX_V,          5) \
X(a, STATIC,   SINGULAR, FLOAT,    HW_MAX_A,          6) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_THRESHOLD_X,   7) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_THRESHOLD_V,   8) \
X(a, STATIC,   SINGULAR, FLOAT,    MAX_THRESHOLD_A,   9)
#define resetResponse_CALLBACK NULL
#define resetResponse_DEFAULT NULL

#define getStateSetTargetResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_CART_X,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_CART_V,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_CART_A,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_POLE_ANGLE,   4) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_POLE_V,       5) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_IMU_A,        6) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_MOTOR_X,      7) \
X(a, STATIC,   SINGULAR, FLOAT,    CURR_MOTOR_V,      8)
#define getStateSetTargetResponse_CALLBACK NULL
#define getStateSetTargetResponse_DEFAULT NULL

extern const pb_msgdesc_t resetRequest_msg;
extern const pb_msgdesc_t getStateSetTargetRequest_msg;
extern const pb_msgdesc_t resetResponse_msg;
extern const pb_msgdesc_t getStateSetTargetResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define resetRequest_fields &resetRequest_msg
#define getStateSetTargetRequest_fields &getStateSetTargetRequest_msg
#define resetResponse_fields &resetResponse_msg
#define getStateSetTargetResponse_fields &getStateSetTargetResponse_msg

/* Maximum encoded size of messages (where known) */
#define getStateSetTargetRequest_size            15
#define getStateSetTargetResponse_size           40
#define resetRequest_size                        45
#define resetResponse_size                       45

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
