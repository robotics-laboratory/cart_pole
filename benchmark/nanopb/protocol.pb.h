/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_PROTOCOL_PB_H_INCLUDED
#define PB_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _MessageType { 
    MessageType_RESET = 0, 
    MessageType_TARGETSTATE = 1, 
    MessageType_KEEPALIVE = 2, 
    MessageType_UPDATESTATE = 3 
} MessageType;

typedef enum _Error { 
    Error_NO_ERROR = 0, 
    Error_NEED_RESET = 1, 
    Error_X_OVERFLOW = 2, 
    Error_V_OVERFLOW = 4, 
    Error_A_OVERFLOW = 8, 
    Error_MOTOR_STALLED = 16, 
    Error_ENDSTOP_HIT = 32 
} Error;

/* Struct definitions */
typedef struct _Config { 
    float max_cart_x; 
    float max_cart_v; 
    float max_cart_a; 
    float hw_max_x; 
    float hw_max_v; 
    float hw_max_a; 
} Config;

typedef struct _State { 
    /* The line below uses varialbe length encoding! */
    int32_t errorCode; 
    float curr_cart_x; /* current cart position float */
    float curr_cart_v; /* current cart velocity float */
    float curr_cart_a; /* current cart acceleration */
    float curr_pole_x; /* current pole angle */
    float curr_pole_v; /* current pole angular velocity */
    float curr_imu_a; /* current IMU measured cart acceleration */
} State;

typedef struct _Target { 
    float target_cart_x; 
    float target_cart_v; 
    float target_cart_a; 
} Target;


/* Helper constants for enums */
#define _MessageType_MIN MessageType_RESET
#define _MessageType_MAX MessageType_UPDATESTATE
#define _MessageType_ARRAYSIZE ((MessageType)(MessageType_UPDATESTATE+1))

#define _Error_MIN Error_NO_ERROR
#define _Error_MAX Error_ENDSTOP_HIT
#define _Error_ARRAYSIZE ((Error)(Error_ENDSTOP_HIT+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define State_init_default                       {0, 0, 0, 0, 0, 0, 0}
#define Config_init_default                      {0, 0, 0, 0, 0, 0}
#define Target_init_default                      {0, 0, 0}
#define State_init_zero                          {0, 0, 0, 0, 0, 0, 0}
#define Config_init_zero                         {0, 0, 0, 0, 0, 0}
#define Target_init_zero                         {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Config_max_cart_x_tag                    1
#define Config_max_cart_v_tag                    2
#define Config_max_cart_a_tag                    3
#define Config_hw_max_x_tag                      4
#define Config_hw_max_v_tag                      5
#define Config_hw_max_a_tag                      6
#define State_errorCode_tag                      1
#define State_curr_cart_x_tag                    2
#define State_curr_cart_v_tag                    3
#define State_curr_cart_a_tag                    4
#define State_curr_pole_x_tag                    5
#define State_curr_pole_v_tag                    6
#define State_curr_imu_a_tag                     7
#define Target_target_cart_x_tag                 1
#define Target_target_cart_v_tag                 2
#define Target_target_cart_a_tag                 3

/* Struct field encoding specification for nanopb */
#define State_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    errorCode,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    curr_cart_x,       2) \
X(a, STATIC,   SINGULAR, FLOAT,    curr_cart_v,       3) \
X(a, STATIC,   SINGULAR, FLOAT,    curr_cart_a,       4) \
X(a, STATIC,   SINGULAR, FLOAT,    curr_pole_x,       5) \
X(a, STATIC,   SINGULAR, FLOAT,    curr_pole_v,       6) \
X(a, STATIC,   SINGULAR, FLOAT,    curr_imu_a,        7)
#define State_CALLBACK NULL
#define State_DEFAULT NULL

#define Config_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    max_cart_x,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    max_cart_v,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    max_cart_a,        3) \
X(a, STATIC,   SINGULAR, FLOAT,    hw_max_x,          4) \
X(a, STATIC,   SINGULAR, FLOAT,    hw_max_v,          5) \
X(a, STATIC,   SINGULAR, FLOAT,    hw_max_a,          6)
#define Config_CALLBACK NULL
#define Config_DEFAULT NULL

#define Target_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    target_cart_x,     1) \
X(a, STATIC,   SINGULAR, FLOAT,    target_cart_v,     2) \
X(a, STATIC,   SINGULAR, FLOAT,    target_cart_a,     3)
#define Target_CALLBACK NULL
#define Target_DEFAULT NULL

extern const pb_msgdesc_t State_msg;
extern const pb_msgdesc_t Config_msg;
extern const pb_msgdesc_t Target_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define State_fields &State_msg
#define Config_fields &Config_msg
#define Target_fields &Target_msg

/* Maximum encoded size of messages (where known) */
#define Config_size                              30
#define State_size                               41
#define Target_size                              15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
